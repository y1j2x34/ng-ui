{"version":3,"sources":["supports/Class.js","supports/opath.js","supports/Subject.js","listview-item.model.js","listview.model.js","dragselector.plugin.js","listview.plugin.js","listview.js"],"names":["globe","factory","module","exports","define","amd","Class","this","singleton","createClass","apply","arguments","name","definition","args","length","Error","isString","extend","Super","F","isFunction","prototype","propertyNames","Object","getOwnPropertyNames","init","removeFirst","noop","className","isPythonicOn","pythonic","clazz","createConstructor","defineConstant","call","$super","first","self","isArgument","superclass","statics","copyDescriptors","iteratePropNames","origin","value","copyDescriptor","dest","removeWhere","constructorFactoryCache","Function","target","defineProperty","enumerable","configurable","writable","propNames","callback","i","filter","acceptAll","descriptor","getOwnPropertyDescriptor","isDefined","undefined","array","element","index","indexOf","splice","acceptFilter","removed","toRemove","push","fn","create","defaultCallback","key","node","root","sep","get","path","keys","split","obj","Observer","source","data","times","Infinity","attach","names","nameParts","parts","cls","obs","observers","ob","trim","on","dataOrCallback","one","trigger","Array","slice","observersOfName","triggerByCls","triggerAll","has","k","observer","callObserver","off","func","observerItems","observerItem","callArgs","e","id","select","selected","Subject","Item","items","itemIds","nextSeq","selects","itemSeq","sequence","_isArray","arr","createItem","item","deleteItem","ids","itemsToBeRemoved","forEach","hasOwnProperty","_deleteItems","selIndex","update","options","theme","SUPPORTED_THEMES","spec","SUPPORTED_SPECS","SUPPORTED_CHECK_VALUES","check","bselects","indexMap","unselect","selectAll","unselectAll","getItems","retItems","uber","relc","a","b","val","difVals","seq","$","dragSelector","notDestroy","each","$elm","$sel","find","eventId","document","mousePosition","mx","my","$cur","offsetX","offsetY","ofx","offset","eofx","left","top","selectorEventHandlerFactory","sx","sy","addClass","mp","selx","Math","min","selw","abs","sely","selh","box","width","height","css","Date","getTime","appendTo","mouseMoveEvent","button","removeClass","ObjectPath","ListViewModel","createListView","$list","append","listview","selectElementsByIds","remove","lastSelects","newSelects","unselects","removeAttr","removeProp","attr","prop","$item","template","itemTemplate","parseTemplate","LISTVIEW_ITEM_DATA_NAME","$target","is","ctrlKey","shiftKey","currentTarget","$items","firstIndex","shiftSelectIndex","minIndex","maxIndex","max","itemElement","itemIndex","stopPropagation","$itemName","closest","text","cfg","focus","preventDefault","shiftKeyDown","ctrlKeyDown","$document","keyCode","boxBottom","eofs","itemHeight","itemWidth","$itemElm","iofs","itemTop","collision","empty","elements","getElementById","destroy","removeData","LISTVIEW_DATA_NAME","boxa","boxb","join","opath","replace","r","DEFAULT_OPTIONS","require"],"mappings":"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","file":"listview.min.js","sourcesContent":["(function(globe, factory) {\r\n    \"use strict\";\r\n    if (typeof module === \"object\" && module.exports) {\r\n        module.exports = factory();\r\n    } else if (typeof define === \"function\" && define.amd) {\r\n        define('Class',factory);\r\n    } else {\r\n        globe.Class = factory();\r\n    }\r\n})(this, function() {\r\n    // jshint strict:false\r\n\r\n    var constructorFactoryCache = {};\r\n\r\n    function Class() {}\r\n\r\n    Class.create = createClass;\r\n    Class.extend = extend;\r\n    Class.singleton = singleton;\r\n\r\n    return Class;\r\n\r\n    function singleton(){\r\n        var Cls = createClass.apply(null, arguments);\r\n        return new Cls();\r\n    }\r\n\r\n    function createClass(name, definition) {\r\n        var args = arguments;\r\n        switch (args.length) {\r\n            case 0:\r\n                throw new Error(\"Illegal arguments\");\r\n            case 1:\r\n                if (isString(args[0])) {\r\n                    definition = {};\r\n                } else {\r\n                    definition = name;\r\n                    name = definition.name || \"<anonymous>\";\r\n                }\r\n                break;\r\n        }\r\n        return extend(Class, definition);\r\n    }\r\n\r\n    function extend(Super, definition) {\r\n\r\n        if(arguments.length === 1){\r\n            if(isFunction(Super)){\r\n                definition = {};\r\n            }else{\r\n                definition = Super;\r\n                Super = Class;\r\n            }\r\n        }\r\n\r\n        function F() {}\r\n        F.prototype = Super.prototype;\r\n\r\n        var propertyNames = Object.getOwnPropertyNames(definition);\r\n        var init = definition.init;\r\n\r\n        removeFirst(propertyNames, \"init\");\r\n\r\n        if (typeof init !== \"function\") {\r\n            init = noop;\r\n        }\r\n        var className = definition.name || \"Class\";\r\n        // 启用python风格\r\n        var isPythonicOn = definition.pythonic !== false;\r\n\r\n        if(isPythonicOn){\r\n            init = pythonic(init);\r\n        }\r\n\r\n        var clazz = createConstructor(className, init);\r\n\r\n        clazz.prototype = new F();\r\n        defineConstant(clazz.prototype, \"constructor\", clazz);\r\n        defineConstant(clazz.prototype, \"uber\", Super.prototype);\r\n        defineConstant(clazz.prototype, \"clazz\", clazz);\r\n        defineConstant(clazz.prototype, \"superclass\", Super);\r\n        defineConstant(clazz, \"superclass\", Super);\r\n        defineConstant(clazz, \"extend\", function(definition) {\r\n            return extend.call(clazz, clazz, definition);\r\n        });\r\n        var $super = function(first){\r\n            var self = this;\r\n            if(arguments.length === 1 && isArgument(first)){\r\n                self.superclass.apply(self, first);\r\n            }else{\r\n                self.superclass.apply(self, arguments);\r\n            }\r\n        };\r\n\r\n        defineConstant(clazz.prototype, \"$super\", $super);\r\n\r\n        var statics = definition.statics || {};\r\n        removeFirst(propertyNames, \"statics\");\r\n\r\n        copyDescriptors(statics, clazz, Object.getOwnPropertyNames(statics));\r\n\r\n        if (isPythonicOn) {\r\n            iteratePropNames(definition, propertyNames, function(origin, name) {\r\n                var value = origin[name];\r\n                if (isFunction(value)) {\r\n                    clazz.prototype[name] = pythonic(value);\r\n                } else {\r\n                    copyDescriptor(origin, clazz.prototype, name);\r\n                }\r\n            });\r\n        } else {\r\n            copyDescriptors(definition, clazz.prototype, propertyNames, function(origin, dest, name) {\r\n                return isFunction(origin[name]);\r\n            });\r\n        }\r\n\r\n        removeWhere(propertyNames, function(name) {\r\n            return isFunction(definition[name]);\r\n        });\r\n        return clazz;\r\n    }\r\n    function createConstructor(className, init){\r\n        if(!constructorFactoryCache[className]){\r\n            // jshint evil: true\r\n            constructorFactoryCache[className] = new Function(\"init\", \"return function \" + className + \"(){return init.apply(this, arguments);}\");\r\n        }\r\n        return constructorFactoryCache[className](init);\r\n    }\r\n    function defineConstant(target, name, value) {\r\n        Object.defineProperty(target, name, {\r\n            value: value,\r\n            enumerable: false,\r\n            configurable: false,\r\n            writable: false\r\n        });\r\n    }\r\n\r\n    function iteratePropNames(origin, propNames, callback) {\r\n        if (!isFunction(callback)) {\r\n            callback = noop;\r\n        }\r\n        if (isString(propNames)) {\r\n            callback(origin, propNames);\r\n        }\r\n        for (var i = 0; i < propNames.length; i++) {\r\n            callback(origin, propNames[i]);\r\n        }\r\n    }\r\n\r\n    function copyDescriptors(origin, dest, propNames, filter) {\r\n        if (!isFunction(filter)) {\r\n            filter = acceptAll;\r\n        }\r\n        iteratePropNames(origin, propNames, function(origin, name) {\r\n            if (filter(origin, dest, name)) {\r\n                copyDescriptor(origin, dest, name);\r\n            }\r\n        });\r\n    }\r\n\r\n    function copyDescriptor(origin, dest, name) {\r\n        var descriptor = Object.getOwnPropertyDescriptor(origin, name);\r\n        if (isDefined(descriptor)) {\r\n            Object.defineProperty(dest, name, descriptor);\r\n        }\r\n    }\r\n\r\n    function isString(value) {\r\n        return typeof value === \"string\";\r\n    }\r\n\r\n    function isFunction(value) {\r\n        return typeof value === \"function\";\r\n    }\r\n\r\n    function isDefined(value) {\r\n        return value !== undefined && value !== null;\r\n    }\r\n\r\n    function isArgument(value){\r\n        return value + \"\" === \"[object Arguments]\";\r\n    }\r\n\r\n    function acceptAll() {\r\n        return true;\r\n    }\r\n    function removeFirst(array, element){\r\n        var index = array.indexOf(element);\r\n        if(index !== -1){\r\n            return array.splice(index, 1);\r\n        }else{\r\n            return [];\r\n        }\r\n    }\r\n    function removeWhere(array, acceptFilter){\r\n        if(!acceptFilter){\r\n            return [];\r\n        }\r\n        var removed = [];\r\n        for(var i =0;i<array.length;i++){\r\n            var toRemove = acceptFilter(array[i]);\r\n            if(toRemove === \"break\"){\r\n                break;\r\n            }\r\n            if(toRemove){\r\n                removed.push(array[i]);\r\n                array.splice(i, 1);\r\n            }\r\n        }\r\n        return removed;\r\n    }\r\n    function pythonic(fn){\r\n        return function(){\r\n            var self = this;\r\n            var args = [self];\r\n            args.push.apply(args, arguments);\r\n            return fn.apply(self, args);\r\n        };\r\n    }\r\n    function noop() {}\r\n});\r\n\n","define('supports/opath',[\r\n    \"Class\"\r\n], function(Class) {\r\n    \"use strict\";\r\n    return Class.create({\r\n        name: \"ObjectPath\",\r\n        pythonic: false,\r\n        init: function(root, sep) {\r\n            this.root = root || {};\r\n            this.sep = sep || \".\";\r\n        },\r\n        get: function(path, callback) {\r\n            if (typeof path !== \"string\") {\r\n                throw new Error(\"Illegal argument : \" + path);\r\n            }\r\n            if (typeof callback !== \"function\") {\r\n                callback = defaultCallback;\r\n            }\r\n            var self = this;\r\n            var keys = path.split(self.sep);\r\n            var obj = self.root;\r\n            for (var i = 0; i < keys.length; i++) {\r\n                var key = keys[i];\r\n                var node = callback.call(self, key, obj[key], keys, i);\r\n                obj[key] = node;\r\n                obj = node;\r\n            }\r\n            return obj;\r\n        }\r\n    });\r\n\r\n    function defaultCallback(key, node) {\r\n        return node || {};\r\n    }\r\n});\n","define('Subject',[\r\n    \"Class\"\r\n],function(Class) {\r\n    \"use strict\";\r\n\r\n    return Class.create(\"Subject\", {\r\n        init: function(self){\r\n            self.observers = {};\r\n        },\r\n        //注册事件\r\n        on: on,\r\n        //只执行一次\r\n        one: one,\r\n        //事件触发\r\n        trigger: trigger,\r\n        // 取消事件\r\n        off: off\r\n    });\r\n\r\n    function Observer(source, name, data, callback, times) {\r\n        this.source = source;\r\n        this.name = name;\r\n        this.data = data;\r\n        this.callback = callback;\r\n        this.times = times || Infinity;\r\n    }\r\n\r\n    function attach(self, names, callback, data, times) {\r\n        if (names === undefined) {\r\n            names = undefined + \"\";\r\n        }\r\n\r\n        var nameParts = names.split(\",\");\r\n        for(var i=0;i<nameParts.length;i++){\r\n            attachOne(nameParts[i].trim());\r\n        }\r\n\r\n        function attachOne(name){\r\n            var parts = name.split(\".\");\r\n            name = parts[0];\r\n            var cls = parts[1];\r\n            var obs = self.observers[name];\r\n            if (!obs) {\r\n                obs = {};\r\n                self.observers[name] = obs;\r\n            }\r\n            var ob = obs[cls];\r\n            if (!ob) {\r\n                ob = [];\r\n                obs[cls] = ob;\r\n            }\r\n            ob.push(new Observer(self, name, data, callback, times));\r\n        }\r\n    }\r\n\r\n\r\n    function on(self, name, dataOrCallback, callback) {\r\n        var data;\r\n        if (typeof dataOrCallback === \"function\") {\r\n            data = callback;\r\n            callback = dataOrCallback;\r\n        } else if (typeof callback === \"function\") {\r\n            data = dataOrCallback;\r\n        }\r\n        attach(self, name, callback, data);\r\n    }\r\n\r\n    function one(self, name, dataOrCallback, callback) {\r\n        var data;\r\n        if (typeof dataOrCallback === \"function\") {\r\n            data = callback;\r\n            callback = dataOrCallback;\r\n        } else if (typeof callback === \"function\") {\r\n            data = dataOrCallback;\r\n        }\r\n        attach(self, name, callback, data, 1);\r\n    }\r\n\r\n    function trigger(self, names) {\r\n        if (names === undefined) {\r\n            names = undefined + \"\";\r\n        }\r\n        var nameParts = names.split(\",\");\r\n\r\n        var args = Array.prototype.slice.call(arguments, 2);\r\n\r\n        for(var i = 0; i < nameParts.length; i++){\r\n            triggerOneName(nameParts[i].trim());\r\n        }\r\n\r\n        function triggerOneName(name){\r\n            var parts = name.split(\".\");\r\n            name = parts[0];\r\n            var cls = parts[1];\r\n            var observersOfName = self.observers[name];\r\n\r\n            if (!observersOfName) {\r\n                return false;\r\n            }\r\n\r\n            if (cls) {\r\n                triggerByCls(self, observersOfName[cls], args);\r\n            } else {\r\n                triggerAll(self, observersOfName, args);\r\n            }\r\n        }\r\n    }\r\n\r\n    function triggerAll(self, observersOfName, args) {\r\n        var has = false;\r\n        for (var k in observersOfName) {\r\n            has = true;\r\n            var observers = observersOfName[k];\r\n            if (observers && observers.length > 0) {\r\n                for (var i = 0; i < observers.length; i++) {\r\n                    var observer = observers[i];\r\n                    callObserver(self, observer, args);\r\n                }\r\n            }\r\n        }\r\n        return has;\r\n    }\r\n\r\n    function triggerByCls(self, observers, args) {\r\n        if (observers && observers.length > 0) {\r\n            for (var i = 0; i < observers.length; i++) {\r\n                var observer = observers[i];\r\n                callObserver(self, observer, args);\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n\r\n    function off(self, names, func) {\r\n        if (names === \"*\") {\r\n            self.observers = {};\r\n            return;\r\n        }\r\n\r\n        if (names === undefined) {\r\n            names = undefined + \"\";\r\n        }\r\n\r\n        var nameParts = names.split(\",\");\r\n\r\n        for(var i = 0; i < nameParts.length; i++){\r\n            dettachOne(self, nameParts[i].trim(), func);\r\n        }\r\n\r\n        function dettachOne(self, name, func){\r\n            var parts = name.split(\".\");\r\n            name = parts[0];\r\n            var cls = parts[1];\r\n            var observersOfName = self.observers[name];\r\n            if (!observersOfName) {\r\n                return false;\r\n            }\r\n            if (cls) {\r\n                observersOfName[cls] = undefined;\r\n                delete observersOfName[cls];\r\n            } else if ('function' === typeof func) {\r\n                for (var k in observersOfName) {\r\n                    var observerItems = observersOfName[k];\r\n                    for (var i = 0; i > -1 && i < observerItems.length; i++) {\r\n                        var observerItem = observerItems[i];\r\n                        if (observerItem && observerItem.callback === func) {\r\n                            observerItems.splice(i, 1);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                self.observers[name] = {};\r\n            }\r\n        }\r\n    }\r\n\r\n    function callObserver(self, observer, args) {\r\n        if (observer !== undefined) {\r\n            try {\r\n                var callArgs = [observer];\r\n                callArgs.push.apply(callArgs, args);\r\n                observer.callback.apply(observer.source, callArgs);\r\n            } catch (e) {\r\n                throw e;\r\n            } finally {\r\n                observer.times -= 1;\r\n            }\r\n        }\r\n    }\r\n});\r\n\n","define('listview-item.model',[\"Class\"], function(Class){\r\n    \"use strict\";\r\n\r\n    return Class.create({\r\n        name: \"ListViewItemModel\",\r\n        init: function(self, id, data){\r\n            self.id = id;\r\n            self.select(false);\r\n            self.data = data;\r\n        },\r\n        select:function(self, selected){\r\n            self.selected = selected;\r\n        }\r\n    });\r\n});\n","define('listview.model',[\r\n    \"Class\",\r\n    \"Subject\",\r\n    \"./listview-item.model\"\r\n], function(Class, Subject, Item){\r\n    \"use strict\";\r\n    return Class.extend(Subject, {\r\n        name: \"ListViewModel\",\r\n        statics:{\r\n            nextSeq: sequence(),\r\n            SUPPORTED_SPECS:[\"xs\",\"sm\",\"md\",\"lg\"],\r\n            SUPPORTED_THEMES:[\"grid\",\"list\"],\r\n            SUPPORTED_CHECK_VALUES:[\"true\",\"false\",\"show\",\"hide\"],\r\n            relc: relc\r\n        },\r\n        init: init,\r\n        createItem: createItem,\r\n        deleteItem: deleteItem,\r\n        _deleteItems: _deleteItems,\r\n        update: update,\r\n        select: select,\r\n        unselect: unselect,\r\n        selectAll: selectAll,\r\n        unselectAll: unselectAll,\r\n        getItems: getItems,\r\n        off: off\r\n    });\r\n    function init(self){\r\n        self.$super();\r\n        self.items = {};\r\n        self.itemIds = [];\r\n        self.id = \"exp-\"+self.clazz.nextSeq();\r\n        self.selects = [];\r\n        self.itemSeq = sequence();\r\n    }\r\n    function _isArray(arr){\r\n        return arr instanceof Array;\r\n    }\r\n    function createItem(self, data){\r\n        var item = new Item(self.id+\"-\"+self.itemSeq(),data);\r\n        self.items[item.id] = item;\r\n        self.itemIds.push(item.id);\r\n        self.trigger(self.id+\".create\",item);\r\n        self.trigger(\"create\",item);\r\n    }\r\n    function deleteItem(self, ids){\r\n        var itemsToBeRemoved = [];\r\n        ids.forEach(function(id){\r\n            if(self.items.hasOwnProperty(id)){\r\n                itemsToBeRemoved.push(self.items[id]);\r\n            }\r\n        });\r\n        self._deleteItems(itemsToBeRemoved);\r\n    }\r\n    function _deleteItems(self, itemsToBeRemoved){\r\n        itemsToBeRemoved.forEach(function(item){\r\n            delete self.items[item.id];\r\n            var index = self.itemIds.indexOf(item.id);\r\n            self.itemIds.splice(index, 1);\r\n            var selIndex = self.selects.indexOf(item.id);\r\n            self.selects.splice(selIndex, 1);\r\n            self.trigger(self.id+\".removeItem\", item);\r\n            self.trigger(\"removeItem\", item);\r\n        });\r\n        self.trigger(self.id+\".remove\", itemsToBeRemoved);\r\n        self.trigger(\"remove\", itemsToBeRemoved);\r\n    }\r\n    function update(self, options){\r\n        if(options.data instanceof Array){\r\n            var itemsToBeRemoved = [];\r\n            for(var id in self.items){\r\n                itemsToBeRemoved.push(self.items[id]);\r\n            }\r\n            self._deleteItems(itemsToBeRemoved);\r\n            options.data.forEach(function(data){\r\n                self.createItem(data);\r\n            });\r\n        }\r\n        if(options.theme && self.clazz.SUPPORTED_THEMES.indexOf(options.theme) !== -1){\r\n            self.trigger(self.id+\".updateTheme\",options.theme);\r\n            self.trigger(\"updateTheme\",options.theme);\r\n        }\r\n        if(options.spec && self.clazz.SUPPORTED_SPECS.indexOf(options.spec) !== -1){\r\n            self.trigger(self.id+\".updateSpec\",options.spec);\r\n            self.trigger(\"updateSpec\",options.spec);\r\n        }\r\n        if(self.clazz.SUPPORTED_CHECK_VALUES.indexOf(options.check+\"\") !== -1){\r\n            self.trigger(self.id+\".updateCheck\", options.check);\r\n            self.trigger(\"updateCheck\", options.check);\r\n        }\r\n    }\r\n    function select(self){\r\n        var ids = Array.prototype.slice.call(arguments, 1);\r\n        var bselects = self.selects.slice();\r\n        var indexMap = {};\r\n        self.selects.forEach(function(id, index){\r\n            indexMap[id] = index;\r\n        });\r\n        ids.forEach(function(id){\r\n            self.items[id].select(true);\r\n            var index = indexMap[id];\r\n            if(index === undefined){\r\n                self.selects.push(id);\r\n            }\r\n        });\r\n        self.trigger(self.id+\".select\", self.selects, bselects);\r\n        self.trigger(\"select\", self.selects, bselects);\r\n    }\r\n    function unselect(self){\r\n        var ids = Array.prototype.slice.call(arguments, 1);\r\n        var bselects = self.selects.slice();\r\n        ids.forEach(function(id){\r\n            var index = self.selects.indexOf(id);\r\n            if(index > -1){\r\n                self.selects.splice(index, 1);\r\n                self.items[id].select(false);\r\n            }\r\n        });\r\n        self.trigger(self.id+\".select\",self.selects,bselects);\r\n        self.trigger(\"select\",self.selects,bselects);\r\n    }\r\n    function selectAll(self){\r\n        self.select.apply(self, self.itemIds);\r\n    }\r\n    function unselectAll(self){\r\n        self.unselect.apply(self, self.selects);\r\n    }\r\n    function getItems(self, ids){\r\n        if(_isArray(ids)){\r\n            return;\r\n        }\r\n        var retItems = [];\r\n        ids.forEach(function(id){\r\n            var item = self.items[id];\r\n            if(item !== undefined){\r\n                retItems.push(item);\r\n            }\r\n        });\r\n        return retItems;\r\n    }\r\n    function off(self, name){\r\n        if(name === \"*\") return false;\r\n        if(typeof name === \"string\"){\r\n            var splited = name.split(\".\");\r\n            if(splited[1] === \"ui\"){\r\n                return false;\r\n            }\r\n        }\r\n        return self.uber.off.apply(self, Array.prototype.slice.call(arguments,1));\r\n    }\r\n    // b对于a的相对补集\r\n    function relc(a,b){\r\n        if(!(a instanceof Array && b instanceof Array)){\r\n            return [];\r\n        }\r\n\r\n        if(a.length < 1 || b.length < 1){\r\n            return b;\r\n        }\r\n        var indexMap = {};\r\n        a.forEach(function(val, index){\r\n            indexMap[val] = index;\r\n        });\r\n        var difVals = [];\r\n        b.forEach(function(val){\r\n            if(indexMap[val] === undefined){\r\n                difVals.push(val);\r\n            }\r\n        });\r\n        return difVals;\r\n    }\r\n    function sequence(){\r\n        var seq = 0;\r\n        return function(){\r\n            return seq ++;\r\n        };\r\n    }\r\n});\n","define('dragselector.plugin',[\r\n    \"jquery\"\r\n], function($){\r\n    \"use strict\";\r\n\r\n    $.fn.dragSelector = function(notDestroy){\r\n        if(notDestroy === true){\r\n            return this.each(function(index, element){\r\n                var $elm = $(element);\r\n                var $sel = $elm.find(\".drag-selector\");\r\n                if($sel.length < 1){\r\n                    return;\r\n                }\r\n                var eventId = $sel.data(\"eventId\");\r\n                if(eventId === undefined){\r\n                    return;\r\n                }\r\n                $elm.off(\"mousedown.\"+eventId);\r\n                $(document).off(\"mousemove.\"+eventId);\r\n            });\r\n        }\r\n        return this.each(function(index, element){\r\n            var eventId = new Date().getTime() + index;\r\n            var $elm = $(element);\r\n            var $sel = $(\"<div>\");\r\n\r\n            $sel.data(\"eventId\", eventId);\r\n\r\n            $sel.addClass(\"drag-selector\");\r\n            $sel.appendTo($elm);\r\n\r\n            function mousePosition(e){\r\n                var $cur = $(e.target);\r\n                var mx,my;\r\n                if(e.target === element){\r\n                    mx = e.offsetX;\r\n                    my = e.offsetY;\r\n                }else{\r\n                    var  ofx = $cur.offset();\r\n                    var eofx = $elm.offset();\r\n                    mx = ofx.left - eofx.left + e.offsetX;\r\n                    my = ofx.top  - eofx.top  + e.offsetY;\r\n                }\r\n                return {\r\n                    left: mx,\r\n                    top: my\r\n                };\r\n            }\r\n            function selectorEventHandlerFactory(sx, sy){\r\n                return function(e){\r\n                    $sel.addClass(\"show\");\r\n                    var mp = mousePosition(e);\r\n                    var mx = mp.left,my = mp.top;\r\n                    var\r\n                        selx = Math.min(mx, sx),\r\n                        selw = Math.abs(sx - mx),\r\n                        sely = Math.min(my, sy),\r\n                        selh = Math.abs(sy - my);\r\n\r\n                    var box = {\r\n                        left:selx,\r\n                        top: sely,\r\n                        width:selw,\r\n                        height:selh\r\n                    };\r\n                    $sel.css(box);\r\n                    $elm.trigger(\"dragSelect\",box);\r\n                };\r\n            }\r\n            var mouseMoveEvent = \"mousemove.\"+ eventId;\r\n            $elm.on(\"mousedown.\"+eventId, function(e){\r\n                if(e.button !== 0){\r\n                    return;\r\n                }\r\n                $sel.css({\r\n                    width:0,\r\n                    height:0\r\n                });\r\n                var mp = mousePosition(e);\r\n                $elm.on(mouseMoveEvent, selectorEventHandlerFactory(mp.left, mp.top));\r\n            });\r\n            $(document).on(\"mouseup.\"+eventId, function(e){\r\n                if(e.button !== 0){\r\n                    return;\r\n                }\r\n                $sel.removeClass(\"show\");\r\n                $elm.off(mouseMoveEvent);\r\n            });\r\n        });\r\n    };\r\n\r\n    return $.fn.dragSelector;\r\n});\n","define('listview.plugin',[\r\n    \"jquery\",\r\n    \"./supports/opath\",\r\n    \"./listview.model\",\r\n    \"./dragselector.plugin\"\r\n], function($, ObjectPath, ListViewModel) {\r\n    \"use strict\";\r\n    var LISTVIEW_DATA_NAME = \"listview\";\r\n    var LISTVIEW_ITEM_DATA_NAME = \"listview-item-data\";\r\n    var DEFAULT_OPTIONS = {\r\n        theme: \"grid\", // list,grid\r\n        spec: \"md\", // xs, sm, md, lg, xlg\r\n        template: itemTemplate,\r\n        data: [],\r\n        check: \"hide\"\r\n    };\r\n    var $document = $(document);\r\n\r\n    $.fn.listview = function(options) {\r\n        if (options === undefined || options === null) {\r\n            return;\r\n        }\r\n        if (options === false) {\r\n            return this.each(function(index, element) {\r\n                var $elm = $(element);\r\n                var listview = $elm.data(LISTVIEW_DATA_NAME);\r\n                if (listview instanceof ListViewModel) {\r\n                    destroy(listview, $elm);\r\n                }\r\n            });\r\n        }\r\n        options = $.extend({}, DEFAULT_OPTIONS, options);\r\n\r\n        return this.each(function(index, element) {\r\n            var $elm = $(element);\r\n            var listview = $elm.data(LISTVIEW_DATA_NAME);\r\n            if (listview instanceof ListViewModel) {\r\n                listview.update(options);\r\n                return;\r\n            }\r\n            listview = createListView(options, $elm);\r\n            $elm.data(LISTVIEW_DATA_NAME, listview);\r\n        });\r\n    };\r\n\r\n    function createListView(options, element) {\r\n        var $elm = $(\"<div>\");\r\n        var $list = $(\"<ul>\");\r\n        $elm.addClass(\"listview\")\r\n            .addClass(\"listview-\" + options.theme)\r\n            .addClass(\"listview-\" + options.spec);\r\n        if (options.check + \"\" === \"false\" || options.check + \"\" === \"hide\") {\r\n            $elm.addClass(\"hide-check\");\r\n        }\r\n        $list.addClass(\"listview-item-list\");\r\n        $elm.append($list);\r\n\r\n        var listview = new ListViewModel();\r\n\r\n        listview.on(listview.id + \".remove\", function(e, items) {\r\n            var ids = [];\r\n            items.forEach(function(item) {\r\n                ids.push(item.id);\r\n            });\r\n            $(selectElementsByIds(ids)).remove();\r\n        });\r\n        listview.on(listview.id + \".select\", function(e, selects, lastSelects) {\r\n            var newSelects = ListViewModel.relc(lastSelects, selects),\r\n                unselects = ListViewModel.relc(selects, lastSelects),\r\n                items;\r\n\r\n            if (unselects.length > 0) {\r\n                items = selectElementsByIds(unselects);\r\n                $(items)\r\n                    .removeClass(\"active\")\r\n                    .each(function(index, item) {\r\n                        $(item).find(\".item-check>input[type=checkbox]\")\r\n                            .removeAttr(\"checked\").removeProp(\"checked\");\r\n                    });\r\n            }\r\n\r\n            if (newSelects.length > 0) {\r\n                items = selectElementsByIds(newSelects);\r\n                $(items).addClass(\"active\")\r\n                    .each(function(index, item) {\r\n                        $(item).find(\".item-check>input[type=checkbox]\")\r\n                            .attr(\"checked\", \"checked\").prop(\"checked\", \"checked\");\r\n                    });\r\n            }\r\n        });\r\n        listview.on(listview.id + \".create\", function(e, item) {\r\n            var $item = $(\"<li>\");\r\n            $item.attr({\r\n                id: item.id\r\n            }).addClass(\"listview-item\");\r\n            var template;\r\n            switch (typeof options.template) {\r\n                case \"string\":\r\n                    template = options.template;\r\n                    break;\r\n                case \"function\":\r\n                    template = options.template(item);\r\n                    break;\r\n                default:\r\n                    template = itemTemplate();\r\n            }\r\n            $item.append(parseTemplate(item, template));\r\n            $item.data(LISTVIEW_ITEM_DATA_NAME, item);\r\n            $list.append($item);\r\n        });\r\n        listview.on(listview.id + \".updateTheme\", function(e, theme) {\r\n            $elm\r\n                .removeClass(\"listview-grid\")\r\n                .removeClass(\"listview-list\")\r\n                .addClass(\"listview-\" + theme);\r\n            options.theme = theme;\r\n        });\r\n        listview.on(listview.id + \".updateSpec\", function(e, spec) {\r\n            var supportedSpecs = [\"xs\", \"sm\", \"md\", \"lg\"];\r\n            supportedSpecs.forEach(function(spec) {\r\n                $elm.removeClass(\"listview-\" + spec);\r\n            });\r\n            $elm.addClass(\"listview-\" + spec);\r\n            options.spec = spec;\r\n        });\r\n        listview.on(listview.id + \".updateCheck\", function(e, check) {\r\n            switch (check + \"\") {\r\n                case \"true\":\r\n                case \"show\":\r\n                    $elm.removeClass(\"hide-check\");\r\n                    break;\r\n                case \"false\":\r\n                case \"hide\":\r\n                    $elm.addClass(\"hide-check\");\r\n                    break;\r\n            }\r\n            options.check = check;\r\n        });\r\n        $elm.on(\"click\", function(e) {\r\n            var $target = $(e.target);\r\n            if ($elm.prop(\"dragged\")) {\r\n                $elm.removeProp(\"dragged\");\r\n                return;\r\n            }\r\n            if (($target.is($elm) || $target.is($list)) && !e.ctrlKey && !e.shiftKey) {\r\n                listview.unselectAll();\r\n            }\r\n        });\r\n        $elm.on(\"click\", \".listview-item\", function(e) {\r\n            var $item = $(e.currentTarget);\r\n            var item = $item.data(LISTVIEW_ITEM_DATA_NAME);\r\n            var index = $item.index();\r\n            if (e.shiftKey) {\r\n                var $items = $elm.find(\".listview-item\");\r\n                var firstIndex = listview.shiftSelectIndex;\r\n                if (firstIndex === undefined) {\r\n                    if (listview.selects.length > 0) {\r\n                        firstIndex = $elm.find(\"#\" + listview.selects[listview.selects.length - 1]).index();\r\n                    } else {\r\n                        firstIndex = 0;\r\n                    }\r\n                    listview.shiftSelectIndex = firstIndex;\r\n                }\r\n                var ids = [];\r\n                var minIndex = Math.min(firstIndex, index),\r\n                    maxIndex = Math.max(firstIndex, index);\r\n                $items.slice(minIndex, maxIndex + 1).each(function(index, itemElement) {\r\n                    ids.push($(itemElement).data(LISTVIEW_ITEM_DATA_NAME).id);\r\n                });\r\n                var unselects = listview.selects.filter(function(id) {\r\n                    var itemIndex = $(\"#\" + id).index();\r\n                    return itemIndex < minIndex || itemIndex > maxIndex;\r\n                });\r\n                listview.unselect.apply(listview, unselects);\r\n                listview.select.apply(listview, ids);\r\n            } else if (e.ctrlKey) {\r\n                if (item.selected) {\r\n                    listview.unselect(item.id);\r\n                } else {\r\n                    listview.select(item.id);\r\n                    listview.shiftSelectIndex = index;\r\n                }\r\n            } else {\r\n                if (item.selected && listview.selects.length < 2) {\r\n                    listview.unselectAll();\r\n                } else {\r\n                    listview.unselectAll();\r\n                    listview.select(item.id);\r\n                    listview.shiftSelectIndex = index;\r\n                }\r\n            }\r\n            e.stopPropagation();\r\n        });\r\n        $elm.on(\"dblclick\", \".item-name\", function(e) {\r\n            var $itemName = $(e.currentTarget);\r\n            var item = $itemName.closest(\".listview-item\")\r\n                .data(LISTVIEW_ITEM_DATA_NAME);\r\n            $itemName.attr(\"contenteditable\", \"\").text(item.data.cfg.name).focus();\r\n        });\r\n        $elm.on(\"mousedown\", \".item-name[contenteditable]\", function(e) {\r\n            e.stopPropagation();\r\n        });\r\n        $elm.on(\"keyup\", \".item-name\", function(e) {\r\n            var $itemName = $(e.currentTarget);\r\n            if (e.ctrlKey) {\r\n                $itemName.removeAttr(\"contenteditable\");\r\n                var item = $itemName.closest(\".listview-item\")\r\n                    .data(LISTVIEW_ITEM_DATA_NAME);\r\n                item.data.cfg.name = $itemName.text().trim();\r\n                $itemName.closest(\".listview-item-details\")\r\n                    .attr(\"title\", $itemName.text().trim());\r\n                listview.trigger(\"submit\", item, \"name\");\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            }\r\n        });\r\n        $elm.on(\"focusout\", \".item-name\", function(e) {\r\n            var $itemName = $(e.currentTarget);\r\n            if ($itemName.attr(\"contenteditable\") === undefined) {\r\n                return;\r\n            }\r\n            $itemName.removeAttr(\"contenteditable\");\r\n            var item = $itemName\r\n                .closest(\".listview-item\")\r\n                .data(LISTVIEW_ITEM_DATA_NAME);\r\n            $itemName.text(item.data.cfg.name);\r\n        });\r\n        var shiftKeyDown = false,\r\n            ctrlKeyDown = false;\r\n        $document.on(\"keydown.\" + listview.id, function(e) {\r\n            shiftKeyDown = e.shiftKey;\r\n            ctrlKeyDown = e.ctrlKey;\r\n            if (e.keyCode === 65 && e.ctrlKey) { // ctrl + A 选择所有\r\n                listview.selectAll();\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n            }\r\n        });\r\n        $document.on(\"keyup.\" + listview.id, function(e) {\r\n            if (e.keyCode === 17) {\r\n                ctrlKeyDown = false;\r\n            }\r\n            if (e.keyCode === 16) {\r\n                shiftKeyDown = false;\r\n            }\r\n        });\r\n        $elm.on(\"dragSelect\", function(e, box) {\r\n            // 在按下Ctrl键点击鼠标多选时，鼠标抖一下容易取消选择。\r\n            if (ctrlKeyDown && box.width < 20 && box.height < 20) {\r\n                return;\r\n            }\r\n            var boxBottom = box.top + box.height;\r\n            $elm.prop(\"dragged\", true);\r\n\r\n            var selects = [];\r\n            var unselects = [];\r\n            var eofs = $elm.offset();\r\n            // var eofs = $elm[0].getBoundingClientRect();\r\n            var $items = $elm.find(\".listview-item\");\r\n            var itemHeight = $items.height();\r\n            var itemWidth = $items.width();\r\n            $items.each(function(index, itemElement) {\r\n                var $itemElm = $(itemElement);\r\n                var item = $itemElm.data(LISTVIEW_ITEM_DATA_NAME);\r\n                var iofs = $itemElm.offset();\r\n\r\n                var itemTop = iofs.top - eofs.top;\r\n                if (itemTop > boxBottom) {\r\n                    if (!shiftKeyDown && !ctrlKeyDown) {\r\n                        unselects.push.apply(unselects, listview.itemIds.slice(index));\r\n                    }\r\n                    return false;\r\n                }\r\n                var itemBottom = itemTop + itemHeight;\r\n                if (itemBottom < box.top) {\r\n                    if (!shiftKeyDown && !ctrlKeyDown) {\r\n                        if (item.selected) {\r\n                            unselects.push(item.id);\r\n                        }\r\n                    }\r\n                    return;\r\n                }\r\n                var itemBox = {\r\n                    left: iofs.left - eofs.left,\r\n                    top: itemTop,\r\n                    width: itemWidth,\r\n                    height: itemHeight\r\n                };\r\n                if (collision(box, itemBox)) {\r\n                    if (!item.selected) {\r\n                        selects.push(item.id);\r\n                    }\r\n                } else if (!shiftKeyDown && !ctrlKeyDown) {\r\n                    if (item.selected) {\r\n                        unselects.push(item.id);\r\n                    }\r\n                }\r\n            });\r\n            listview.unselect.apply(listview, unselects);\r\n            listview.select.apply(listview, selects);\r\n        });\r\n\r\n        $elm.dragSelector();\r\n\r\n        element.empty().append($elm);\r\n\r\n        if (options.data instanceof Array) {\r\n            listview.update({\r\n                data: options.data\r\n            });\r\n        }\r\n        return listview;\r\n    }\r\n\r\n    function selectElementsByIds(ids) {\r\n        var elements = [];\r\n        ids.forEach(function(id) {\r\n            var element = document.getElementById(id);\r\n            if (element !== undefined) {\r\n                elements.push(element);\r\n            }\r\n        });\r\n        return elements;\r\n    }\r\n\r\n    function destroy(listview, $elm) {\r\n        listview.off(listview.id);\r\n        $elm.removeData(LISTVIEW_DATA_NAME);\r\n        $elm.dragSelector(false);\r\n        $elm.find(\".listview\").remove();\r\n        $document.off(\"keydown.\" + listview.id).off(\"keyup.\" + listview.id);\r\n    }\r\n\r\n    function collision(boxa, boxb) {\r\n        if (boxa.left >= boxb.left && boxa.left >= boxb.left + boxb.width) {\r\n            return false;\r\n        } else if (boxa.left <= boxb.left && boxa.left + boxa.width <= boxb.left) {\r\n            return false;\r\n        } else if (boxa.top >= boxb.top && boxa.top >= boxb.top + boxb.height) {\r\n            return false;\r\n        } else if (boxa.top <= boxb.top && boxa.top + boxa.height <= boxb.top) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function itemTemplate() {\r\n        return [\r\n            \"<ul class='listview-item-details' title='${cfg.name}'>\",\r\n            \"<li class='item-check'><input type='checkbox'></li>\",\r\n            \"<li class='item-icon ${cfg.icon}'></li>\",\r\n            \"<li class='item-name'>${cfg.name}</li>\",\r\n            \"</ul>\"\r\n        ].join(\"\");\r\n    }\r\n\r\n    function parseTemplate(item, template) {\r\n        var opath = new ObjectPath(item.data, \".\");\r\n        return template.replace(/\\$\\{([^\\}]+)\\}/g, function(r, path) {\r\n            // return new Function(\"cfg\",\"item\",\"return \"+path+\";\")(item.data.cfg);\r\n            return opath.get(path);\r\n        });\r\n    }\r\n});\n","require([\"listview.plugin\"]);\r\ndefine('listview',[\"jquery\", \"listview.plugin\"],function($){\r\n    \"use strict\";\r\n    return $.fn.listview;\r\n});\n"]}